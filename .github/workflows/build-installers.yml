name: Build Agent Installers

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          choco install -y launch4j
          choco install -y nsis

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm zip
          # Install appimagetool if not present
          if ! command -v appimagetool >/dev/null 2>&1; then
            curl -L -o appimagetool-x86_64.AppImage https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage
            chmod +x appimagetool-x86_64.AppImage
            sudo mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool
          fi

      - name: Build base JAR (all OS)
        run: |
          ./mvnw -version
          ./mvnw clean package -DskipTests

      - name: Build Windows distributions
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          build-windows.bat
          build-windows-bundled.bat
          build-windows-single-exe.bat

      - name: Build macOS distributions
        if: runner.os == 'macOS'
        run: |
          chmod +x build-mac.sh build-mac-bundled.sh || true
          ./build-mac.sh
          ./build-mac-bundled.sh

      - name: Build Linux distributions
        if: runner.os == 'Linux'
        run: |
          chmod +x build-linux.sh build-linux-bundled.sh || true
          ./build-linux.sh
          ./build-linux-bundled.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: alpidi-printer-agent-${{ matrix.os }}
          path: |
            dist/**
            target/*.jar
